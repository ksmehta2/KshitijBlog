[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Hey there! I’m Kshitij Sunil Mehta, a passionate data enthusiast with a knack for storytelling through numbers.\nI hail from Mumbai, where I completed my education in Computer Engineering. My journey into the realm of data began during my college years when I discovered the power of statistics and programming in unlocking hidden patterns from raw information.\nBeyond data, I enjoy playing soccer and traveling and exploring different countries.\nOver the years, I’ve had the privilege of working on different types of data. From academic accolades to real-world projects, each milestone has fueled my passion for continuous learning and growth in the field of data science."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "NYC Traffic Accidents 2020 Analysis",
    "section": "",
    "text": "In this analysis, we delve into the NYC Traffic Accidents dataset for the year 2020, exploring patterns in accident occurrences, identifying hotspots across the city, and analyzing the most common causes of accidents. This analysis aims to uncover insights that could inform better traffic safety measures.\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\n\n# Load the dataset\naccidents_data &lt;- read_csv(\"/Users/kshitijmehta/Desktop/is407/KshitijBlog/data/NYC Accidents 2020.csv\")\n\nRows: 74881 Columns: 29\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (15): BOROUGH, LOCATION, ON STREET NAME, CROSS STREET NAME, OFF STREET ...\ndbl  (12): ZIP CODE, LATITUDE, LONGITUDE, NUMBER OF PERSONS INJURED, NUMBER ...\ndate  (1): CRASH DATE\ntime  (1): CRASH TIME\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\naccidents_data$`CRASH DATE` &lt;- as.Date(accidents_data$`CRASH DATE`, \"%Y-%m-%d\")\naccidents_data &lt;- accidents_data %&gt;%\n  filter(!is.na(BOROUGH) & BOROUGH != \"\" & `CONTRIBUTING FACTOR VEHICLE 1` != \"Unspecified\")\n# Display the structure and the first few rows of the dataset\nglimpse(accidents_data)\n\nRows: 34,196\nColumns: 29\n$ `CRASH DATE`                    &lt;date&gt; 2020-08-29, 2020-08-29, 2020-08-29, 2…\n$ `CRASH TIME`                    &lt;time&gt; 15:40:00, 21:00:00, 00:00:00, 17:10:0…\n$ BOROUGH                         &lt;chr&gt; \"BRONX\", \"BROOKLYN\", \"BRONX\", \"BROOKLY…\n$ `ZIP CODE`                      &lt;dbl&gt; 10466, 11221, 10459, 11203, 10466, 114…\n$ LATITUDE                        &lt;dbl&gt; 40.89210, 40.69050, 40.82472, 40.64989…\n$ LONGITUDE                       &lt;dbl&gt; -73.83376, -73.91991, -73.89296, -73.9…\n$ LOCATION                        &lt;chr&gt; \"POINT (-73.83376 40.8921)\", \"POINT (-…\n$ `ON STREET NAME`                &lt;chr&gt; \"PRATT AVENUE\", \"BUSHWICK AVENUE\", NA,…\n$ `CROSS STREET NAME`             &lt;chr&gt; \"STRANG AVENUE\", \"PALMETTO STREET\", NA…\n$ `OFF STREET NAME`               &lt;chr&gt; NA, NA, \"1047 SIMPSON STREET\", \"4609 S…\n$ `NUMBER OF PERSONS INJURED`     &lt;dbl&gt; 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,…\n$ `NUMBER OF PERSONS KILLED`      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `NUMBER OF PEDESTRIANS INJURED` &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `NUMBER OF PEDESTRIANS KILLED`  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `NUMBER OF CYCLIST INJURED`     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `NUMBER OF CYCLIST KILLED`      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `NUMBER OF MOTORIST INJURED`    &lt;dbl&gt; 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,…\n$ `NUMBER OF MOTORIST KILLED`     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `CONTRIBUTING FACTOR VEHICLE 1` &lt;chr&gt; \"Passing Too Closely\", \"Reaction to Un…\n$ `CONTRIBUTING FACTOR VEHICLE 2` &lt;chr&gt; \"Unspecified\", \"Unspecified\", \"Unspeci…\n$ `CONTRIBUTING FACTOR VEHICLE 3` &lt;chr&gt; NA, NA, \"Unspecified\", NA, \"Unspecifie…\n$ `CONTRIBUTING FACTOR VEHICLE 4` &lt;chr&gt; NA, NA, \"Unspecified\", NA, NA, NA, NA,…\n$ `CONTRIBUTING FACTOR VEHICLE 5` &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ COLLISION_ID                    &lt;dbl&gt; 4342908, 4343555, 4343588, 4342953, 43…\n$ `VEHICLE TYPE CODE 1`           &lt;chr&gt; \"Sedan\", \"Sedan\", \"Station Wagon/Sport…\n$ `VEHICLE TYPE CODE 2`           &lt;chr&gt; \"Station Wagon/Sport Utility Vehicle\",…\n$ `VEHICLE TYPE CODE 3`           &lt;chr&gt; NA, NA, \"Sedan\", NA, \"Sedan\", \"Station…\n$ `VEHICLE TYPE CODE 4`           &lt;chr&gt; NA, NA, \"Motorcycle\", NA, NA, NA, NA, …\n$ `VEHICLE TYPE CODE 5`           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\nhead(accidents_data)\n\n# A tibble: 6 × 29\n  `CRASH DATE` `CRASH TIME` BOROUGH  `ZIP CODE` LATITUDE LONGITUDE LOCATION     \n  &lt;date&gt;       &lt;time&gt;       &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;        \n1 2020-08-29   15:40        BRONX         10466     40.9     -73.8 POINT (-73.8…\n2 2020-08-29   21:00        BROOKLYN      11221     40.7     -73.9 POINT (-73.9…\n3 2020-08-29   00:00        BRONX         10459     40.8     -73.9 POINT (-73.8…\n4 2020-08-29   17:10        BROOKLYN      11203     40.6     -73.9 POINT (-73.9…\n5 2020-08-29   19:50        BRONX         10466     40.9     -73.9 POINT (-73.8…\n6 2020-08-29   00:07        QUEENS        11436     40.7     -73.8 POINT (-73.7…\n# ℹ 22 more variables: `ON STREET NAME` &lt;chr&gt;, `CROSS STREET NAME` &lt;chr&gt;,\n#   `OFF STREET NAME` &lt;chr&gt;, `NUMBER OF PERSONS INJURED` &lt;dbl&gt;,\n#   `NUMBER OF PERSONS KILLED` &lt;dbl&gt;, `NUMBER OF PEDESTRIANS INJURED` &lt;dbl&gt;,\n#   `NUMBER OF PEDESTRIANS KILLED` &lt;dbl&gt;, `NUMBER OF CYCLIST INJURED` &lt;dbl&gt;,\n#   `NUMBER OF CYCLIST KILLED` &lt;dbl&gt;, `NUMBER OF MOTORIST INJURED` &lt;dbl&gt;,\n#   `NUMBER OF MOTORIST KILLED` &lt;dbl&gt;, `CONTRIBUTING FACTOR VEHICLE 1` &lt;chr&gt;,\n#   `CONTRIBUTING FACTOR VEHICLE 2` &lt;chr&gt;, …"
  },
  {
    "objectID": "posts/welcome/index.html#analysis-1-frequency-of-accidents-by-month",
    "href": "posts/welcome/index.html#analysis-1-frequency-of-accidents-by-month",
    "title": "NYC Traffic Accidents 2020 Analysis",
    "section": "Analysis 1: Frequency of Accidents by Month",
    "text": "Analysis 1: Frequency of Accidents by Month\n\naccidents_data$Month &lt;- format(accidents_data$`CRASH DATE`, \"%m\")\n\n# Summarize accidents by month\nmonthly_accidents &lt;- accidents_data %&gt;%\n  group_by(Month) %&gt;%\n  summarise(Accidents = n())\n\n# Plot the accidents by month\nggplot(monthly_accidents, aes(x=Month, y=Accidents)) +\n  geom_bar(stat=\"identity\", fill=\"blue\") +\n  labs(title=\"Monthly Traffic Accidents in NYC for 2020\", x=\"Month\", y=\"Number of Accidents\") +\n  theme_minimal()"
  },
  {
    "objectID": "posts/welcome/index.html#analysis-2-geographic-distribution-of-accidents",
    "href": "posts/welcome/index.html#analysis-2-geographic-distribution-of-accidents",
    "title": "NYC Traffic Accidents 2020 Analysis",
    "section": "Analysis 2: Geographic Distribution of Accidents",
    "text": "Analysis 2: Geographic Distribution of Accidents\n\nborough_accidents &lt;- accidents_data %&gt;%\n  group_by(BOROUGH) %&gt;%\n  summarise(Accidents = n())\n\nggplot(borough_accidents, aes(x=reorder(BOROUGH, -Accidents), y=Accidents)) +\n  geom_bar(stat=\"identity\", fill=\"coral\") +\n  labs(title=\"Traffic Accidents Distribution by Borough in NYC for 2020\", x=\"Borough\", y=\"Number of Accidents\") +\n  theme_minimal() +\n  coord_flip()"
  },
  {
    "objectID": "posts/welcome/index.html#analysis-3-common-causes-of-accident",
    "href": "posts/welcome/index.html#analysis-3-common-causes-of-accident",
    "title": "NYC Traffic Accidents 2020 Analysis",
    "section": "Analysis 3: Common causes of accident",
    "text": "Analysis 3: Common causes of accident\n\ncause_accidents &lt;- accidents_data %&gt;%\n  group_by(CAUSE = `CONTRIBUTING FACTOR VEHICLE 1`) %&gt;%\n  summarise(Accidents = n()) %&gt;%\n  arrange(desc(Accidents)) %&gt;%\n  top_n(10)\n\nSelecting by Accidents\n\nggplot(cause_accidents, aes(x=reorder(CAUSE, Accidents), y=Accidents)) +\n  geom_bar(stat=\"identity\", fill=\"lightgreen\") +\n  labs(title=\"Top 10 Causes of Traffic Accidents in NYC for 2020\", x=\"Cause\", y=\"Number of Accidents\") +\n  theme_minimal() +\n  coord_flip()\n\n\n\n\n\n\n\n\nIn this analysis, we explored the NYC Traffic Accidents dataset for 2020. Key findings include a peak in accidents during winter months in Brooklyn. The most common causes of accidents were driver inattention or distraction. These insights highlight the importance of targeted traffic safety measures and the need for ongoing analysis to reduce traffic-related fatalities and injuries."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Healthcare Dataset Analysis",
    "section": "",
    "text": "In this analysis, we delve into a comprehensive healthcare dataset, exploring patterns in patient demographics, medical conditions, and healthcare costs. This analysis aims to uncover insights that could inform better healthcare management and policy-making.\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\n\n# Load the dataset\nhealthcare_data &lt;- read_csv(\"/Users/kshitijmehta/Desktop/is407/KshitijBlog/data/healthcare_dataset.csv\")\n\nRows: 10000 Columns: 15\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): Name, Gender, Blood Type, Medical Condition, Doctor, Hospital, In...\ndbl   (3): Age, Billing Amount, Room Number\ndate  (2): Date of Admission, Discharge Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Clean the data by removing rows with any missing information in crucial columns\nhealthcare_data &lt;- healthcare_data %&gt;%\n  filter(!is.na(Age) & !is.na(Gender) & Gender != \"\" & \n         !is.na(`Medical Condition`) & `Medical Condition` != \"\" & \n         !is.na(`Billing Amount`) & `Billing Amount` &gt; 0)\n\n# Display the structure and the first few rows of the dataset\nglimpse(healthcare_data)\n\nRows: 10,000\nColumns: 15\n$ Name                 &lt;chr&gt; \"Tiffany Ramirez\", \"Ruben Burns\", \"Chad Byrd\", \"A…\n$ Age                  &lt;dbl&gt; 81, 35, 61, 49, 51, 41, 82, 55, 33, 39, 45, 23, 8…\n$ Gender               &lt;chr&gt; \"Female\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\",…\n$ `Blood Type`         &lt;chr&gt; \"O-\", \"O+\", \"B-\", \"B-\", \"O-\", \"AB+\", \"AB+\", \"O-\",…\n$ `Medical Condition`  &lt;chr&gt; \"Diabetes\", \"Asthma\", \"Obesity\", \"Asthma\", \"Arthr…\n$ `Date of Admission`  &lt;date&gt; 2022-11-17, 2023-06-01, 2019-01-09, 2020-05-02, …\n$ Doctor               &lt;chr&gt; \"Patrick Parker\", \"Diane Jackson\", \"Paul Baker\", …\n$ Hospital             &lt;chr&gt; \"Wallace-Hamilton\", \"Burke, Griffin and Cooper\", …\n$ `Insurance Provider` &lt;chr&gt; \"Medicare\", \"UnitedHealthcare\", \"Medicare\", \"Medi…\n$ `Billing Amount`     &lt;dbl&gt; 37490.983, 47304.065, 36874.897, 23303.322, 18086…\n$ `Room Number`        &lt;dbl&gt; 146, 404, 292, 480, 477, 180, 161, 384, 215, 310,…\n$ `Admission Type`     &lt;chr&gt; \"Elective\", \"Emergency\", \"Emergency\", \"Urgent\", \"…\n$ `Discharge Date`     &lt;date&gt; 2022-12-01, 2023-06-15, 2019-02-08, 2020-05-03, …\n$ Medication           &lt;chr&gt; \"Aspirin\", \"Lipitor\", \"Lipitor\", \"Penicillin\", \"P…\n$ `Test Results`       &lt;chr&gt; \"Inconclusive\", \"Normal\", \"Normal\", \"Abnormal\", \"…\n\nhead(healthcare_data)\n\n# A tibble: 6 × 15\n  Name    Age Gender `Blood Type` `Medical Condition` `Date of Admission` Doctor\n  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;               &lt;date&gt;              &lt;chr&gt; \n1 Tiff…    81 Female O-           Diabetes            2022-11-17          Patri…\n2 Rube…    35 Male   O+           Asthma              2023-06-01          Diane…\n3 Chad…    61 Male   B-           Obesity             2019-01-09          Paul …\n4 Anto…    49 Male   B-           Asthma              2020-05-02          Brian…\n5 Mrs.…    51 Male   O-           Arthritis           2021-07-09          Dusti…\n6 Patr…    41 Male   AB+          Arthritis           2020-08-20          Robin…\n# ℹ 8 more variables: Hospital &lt;chr&gt;, `Insurance Provider` &lt;chr&gt;,\n#   `Billing Amount` &lt;dbl&gt;, `Room Number` &lt;dbl&gt;, `Admission Type` &lt;chr&gt;,\n#   `Discharge Date` &lt;date&gt;, Medication &lt;chr&gt;, `Test Results` &lt;chr&gt;"
  },
  {
    "objectID": "posts/post-with-code/index.html#analysis-1-age-distribution-of-patients",
    "href": "posts/post-with-code/index.html#analysis-1-age-distribution-of-patients",
    "title": "Healthcare Dataset Analysis",
    "section": "Analysis 1: Age Distribution of Patients",
    "text": "Analysis 1: Age Distribution of Patients\n\n# Plot the age distribution of the patients\nggplot(healthcare_data, aes(x=Age)) +\n  geom_histogram(binwidth = 10, fill=\"blue\", color=\"black\") +\n  labs(title=\"Age Distribution of Patients\", x=\"Age\", y=\"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "posts/post-with-code/index.html#analysis-2-medical-condition-frequency",
    "href": "posts/post-with-code/index.html#analysis-2-medical-condition-frequency",
    "title": "Healthcare Dataset Analysis",
    "section": "Analysis 2: Medical Condition Frequency",
    "text": "Analysis 2: Medical Condition Frequency\n\n# Summarize medical conditions frequency\ncondition_freq &lt;- healthcare_data %&gt;%\n  group_by(`Medical Condition`) %&gt;%\n  summarise(Count = n()) %&gt;%\n  arrange(desc(Count))\n\n# Plot the frequency of medical conditions\nggplot(condition_freq, aes(x=reorder(`Medical Condition`, Count), y=Count)) +\n  geom_bar(stat=\"identity\", fill=\"green\") +\n  labs(title=\"Frequency of Medical Conditions\", x=\"Medical Condition\", y=\"Count\") +\n  theme_minimal() +\n  coord_flip()"
  },
  {
    "objectID": "posts/post-with-code/index.html#analysis-3-healthcare-costs-analysis",
    "href": "posts/post-with-code/index.html#analysis-3-healthcare-costs-analysis",
    "title": "Healthcare Dataset Analysis",
    "section": "Analysis 3: Healthcare Costs Analysis",
    "text": "Analysis 3: Healthcare Costs Analysis\n\n# Plot the distribution of billing amounts\nggplot(healthcare_data, aes(x=`Billing Amount`)) +\n  geom_histogram(binwidth = 5000, fill=\"purple\", color=\"black\") +\n  labs(title=\"Billing Amount Distribution\", x=\"Billing Amount\", y=\"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "posts/post-with-code/index.html#analysis-4-admission-type-distribution",
    "href": "posts/post-with-code/index.html#analysis-4-admission-type-distribution",
    "title": "Healthcare Dataset Analysis",
    "section": "Analysis 4: Admission Type Distribution",
    "text": "Analysis 4: Admission Type Distribution\n\n# Summarize admission types\nadmission_type_freq &lt;- healthcare_data %&gt;%\n  group_by(`Admission Type`) %&gt;%\n  summarise(Count = n()) %&gt;%\n  arrange(desc(Count))\n\n# Plot the distribution of admission types\nggplot(admission_type_freq, aes(x=`Admission Type`, y=Count, fill=`Admission Type`)) +\n  geom_bar(stat=\"identity\") +\n  labs(title=\"Admission Type Distribution\", x=\"Admission Type\", y=\"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nIn this analysis, we explored the healthcare dataset. Key findings include a wide age range among patients with conditions like Asthma,Cancer and Hypertension.These insights are critical for better healthcare management and policy-making."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "KshitijBlog",
    "section": "",
    "text": "Healthcare Dataset Analysis\n\n\n\n\n\n\ndataset\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMar 15, 2024\n\n\nKshitij Sunil Mehta\n\n\n\n\n\n\n\n\n\n\n\n\nNYC Traffic Accidents 2020 Analysis\n\n\n\n\n\n\ndata science\n\n\n\n\n\n\n\n\n\nMar 12, 2024\n\n\nKshitij Sunil Mehta\n\n\n\n\n\n\nNo matching items"
  }
]